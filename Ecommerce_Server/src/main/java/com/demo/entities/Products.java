package com.demo.entities;
<<<<<<< HEAD
// Generated Nov 16, 2021, 9:57:26 AM by Hibernate Tools 5.1.10.Final
=======
// Generated Nov 16, 2021, 9:02:55 AM by Hibernate Tools 5.1.10.Final
>>>>>>> 9fd1d1ca7d86be0f207fb63535de461072b91dc7

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Products generated by hbm2java
 */
@Entity
@Table(name = "products", catalog = "ecommerce_db")
public class Products implements java.io.Serializable {

	private int id;
	private Branchs branchs;
	private Categories categories;
	private Stores stores;
	private String name;
	private String avatar;
	private String description;
	private String descriptionDetail;
	private double originalPrice;
	private double price;
	private int quantity;
	private int inventory;
	private Date created;
	private Date updated;
	private boolean isOutstanding;
	private boolean isBestSelling;
	private boolean isNew;
	private double discountPercent;
	private double discountAmount;
	private int ratingCount;
	private double ratingAverage;
	private boolean status;
	private Set<TagProducts> tagProductses = new HashSet<TagProducts>(0);
	private Set<Carts> cartses = new HashSet<Carts>(0);
	private Set<Images> imageses = new HashSet<Images>(0);
	private Set<Transactions> transactionses = new HashSet<Transactions>(0);
	private Set<Comments> commentses = new HashSet<Comments>(0);

	public Products() {
	}

	public Products(int id, Branchs branchs, Categories categories, Stores stores, String name, String avatar,
			String description, String descriptionDetail, double originalPrice, double price, int quantity,
			int inventory, Date created, Date updated, boolean isOutstanding, boolean isBestSelling, boolean isNew,
			double discountPercent, double discountAmount, int ratingCount, double ratingAverage, boolean status) {
		this.id = id;
		this.branchs = branchs;
		this.categories = categories;
		this.stores = stores;
		this.name = name;
		this.avatar = avatar;
		this.description = description;
		this.descriptionDetail = descriptionDetail;
		this.originalPrice = originalPrice;
		this.price = price;
		this.quantity = quantity;
		this.inventory = inventory;
		this.created = created;
		this.updated = updated;
		this.isOutstanding = isOutstanding;
		this.isBestSelling = isBestSelling;
		this.isNew = isNew;
		this.discountPercent = discountPercent;
		this.discountAmount = discountAmount;
		this.ratingCount = ratingCount;
		this.ratingAverage = ratingAverage;
		this.status = status;
	}

	public Products(int id, Branchs branchs, Categories categories, Stores stores, String name, String avatar,
			String description, String descriptionDetail, double originalPrice, double price, int quantity,
			int inventory, Date created, Date updated, boolean isOutstanding, boolean isBestSelling, boolean isNew,
			double discountPercent, double discountAmount, int ratingCount, double ratingAverage, boolean status,
			Set<TagProducts> tagProductses, Set<Carts> cartses, Set<Images> imageses, Set<Transactions> transactionses,
			Set<Comments> commentses) {
		this.id = id;
		this.branchs = branchs;
		this.categories = categories;
		this.stores = stores;
		this.name = name;
		this.avatar = avatar;
		this.description = description;
		this.descriptionDetail = descriptionDetail;
		this.originalPrice = originalPrice;
		this.price = price;
		this.quantity = quantity;
		this.inventory = inventory;
		this.created = created;
		this.updated = updated;
		this.isOutstanding = isOutstanding;
		this.isBestSelling = isBestSelling;
		this.isNew = isNew;
		this.discountPercent = discountPercent;
		this.discountAmount = discountAmount;
		this.ratingCount = ratingCount;
		this.ratingAverage = ratingAverage;
		this.status = status;
		this.tagProductses = tagProductses;
		this.cartses = cartses;
		this.imageses = imageses;
		this.transactionses = transactionses;
		this.commentses = commentses;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "branch_id", nullable = false)
	public Branchs getBranchs() {
		return this.branchs;
	}

	public void setBranchs(Branchs branchs) {
		this.branchs = branchs;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", nullable = false)
	public Categories getCategories() {
		return this.categories;
	}

	public void setCategories(Categories categories) {
		this.categories = categories;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "store_id", nullable = false)
	public Stores getStores() {
		return this.stores;
	}

	public void setStores(Stores stores) {
		this.stores = stores;
	}

	@Column(name = "name", nullable = false, length = 200)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "avatar", nullable = false, length = 100)
	public String getAvatar() {
		return this.avatar;
	}

	public void setAvatar(String avatar) {
		this.avatar = avatar;
	}

	@Column(name = "description", nullable = false, length = 500)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "description_detail", nullable = false, length = 65535)
	public String getDescriptionDetail() {
		return this.descriptionDetail;
	}

	public void setDescriptionDetail(String descriptionDetail) {
		this.descriptionDetail = descriptionDetail;
	}

	@Column(name = "original_price", nullable = false, precision = 22, scale = 0)
	public double getOriginalPrice() {
		return this.originalPrice;
	}

	public void setOriginalPrice(double originalPrice) {
		this.originalPrice = originalPrice;
	}

	@Column(name = "price", nullable = false, precision = 22, scale = 0)
	public double getPrice() {
		return this.price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "inventory", nullable = false)
	public int getInventory() {
		return this.inventory;
	}

	public void setInventory(int inventory) {
		this.inventory = inventory;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", nullable = false, length = 10)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated", nullable = false, length = 10)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "isOutstanding", nullable = false)
	public boolean isIsOutstanding() {
		return this.isOutstanding;
	}

	public void setIsOutstanding(boolean isOutstanding) {
		this.isOutstanding = isOutstanding;
	}

	@Column(name = "isBest_selling", nullable = false)
	public boolean isIsBestSelling() {
		return this.isBestSelling;
	}

	public void setIsBestSelling(boolean isBestSelling) {
		this.isBestSelling = isBestSelling;
	}

	@Column(name = "isNew", nullable = false)
	public boolean isIsNew() {
		return this.isNew;
	}

	public void setIsNew(boolean isNew) {
		this.isNew = isNew;
	}

	@Column(name = "discount_percent", nullable = false, precision = 22, scale = 0)
	public double getDiscountPercent() {
		return this.discountPercent;
	}

	public void setDiscountPercent(double discountPercent) {
		this.discountPercent = discountPercent;
	}

	@Column(name = "discount_amount", nullable = false, precision = 22, scale = 0)
	public double getDiscountAmount() {
		return this.discountAmount;
	}

	public void setDiscountAmount(double discountAmount) {
		this.discountAmount = discountAmount;
	}

	@Column(name = "rating_count", nullable = false)
	public int getRatingCount() {
		return this.ratingCount;
	}

	public void setRatingCount(int ratingCount) {
		this.ratingCount = ratingCount;
	}

	@Column(name = "rating_average", nullable = false, precision = 22, scale = 0)
	public double getRatingAverage() {
		return this.ratingAverage;
	}

	public void setRatingAverage(double ratingAverage) {
		this.ratingAverage = ratingAverage;
	}

	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<TagProducts> getTagProductses() {
		return this.tagProductses;
	}

	public void setTagProductses(Set<TagProducts> tagProductses) {
		this.tagProductses = tagProductses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<Carts> getCartses() {
		return this.cartses;
	}

	public void setCartses(Set<Carts> cartses) {
		this.cartses = cartses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<Images> getImageses() {
		return this.imageses;
	}

	public void setImageses(Set<Images> imageses) {
		this.imageses = imageses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<Transactions> getTransactionses() {
		return this.transactionses;
	}

	public void setTransactionses(Set<Transactions> transactionses) {
		this.transactionses = transactionses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<Comments> getCommentses() {
		return this.commentses;
	}

	public void setCommentses(Set<Comments> commentses) {
		this.commentses = commentses;
	}

}
